generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  email   String        @id @default(uuid())
  wallet  String
  courses UserCourses[]
  ratings Rating[]
  Course  Course[]
}

model Course {
  id         String @id @default(uuid())
  title      String
  subheading String
  cost       String
  discount   String
  status     String
  thumbnail  String
  creator    User   @relation(fields: [creatorEmail], references: [email])

  sections CourseSection[]

  users   UserCourses[]
  quizzes Quiz[]

  ratings      Rating[]
  creatorEmail String
}

model CourseSection {
  id       String @id @default(uuid())
  course   Course @relation(fields: [courseId], references: [id])
  courseId String

  title       String
  subsections CourseSubsections[]
}

model CourseSubsections {
  id String @id @default(uuid())

  title   String
  content String

  courseSection   CourseSection @relation(fields: [courseSectionId], references: [id])
  courseSectionId String
}

model UserCourses {
  id        String @id @default(uuid())
  user      User   @relation(fields: [userEmail], references: [email])
  userEmail String
  course    Course @relation(fields: [courseId], references: [id])
  courseId  String

  boughtAt   DateTime @default(now())
  quizScores Float[]

  @@unique([userEmail, courseId])
}

model Quiz {
  id       String @id @default(uuid())
  course   Course @relation(fields: [courseId], references: [id])
  courseId String
  title    String

  questions Question[]
}

model Question {
  id     String @id @default(uuid())
  quiz   Quiz   @relation(fields: [quizId], references: [id])
  quizId String

  question      String
  options       String[]
  correctOption Int
}

model Rating {
  id        String @id @default(uuid())
  course    Course @relation(fields: [courseId], references: [id])
  user      User   @relation(fields: [userEmail], references: [email])
  value     Int
  courseId  String
  userEmail String
}
